spring.datasource.url=jdbc:postgresql://localhost:5432/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}

spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create

app.jwt.secret=${JWT_SECRET}
app.jwt.expiration-ms=900000
app.jwt.refresh-expiration-ms=604800000

logging.level.org.hibernate.type=TRACE
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username={MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable={MAIL_STARTTLS_ENABLE}
jwt.secret=${JWT_SECRET}
jwt.expiration=3600000
jwt.access-expiration-ms=3600000 
jwt.refresh-expiration-ms=604800000 
jwt.refresh-expiration=604800000
app.base-url: http://localhost:8080 
app.reset-token-expiration-ms: 900000 
app.refresh-token-prefix: refresh:
app.reset-token-prefix: reset:
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080 /login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.google.authorization-uri=${GOOGLE_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.google.token-uri=${GOOGLE_TOKEN_URI}
spring.security.oauth2.client.provider.google.user-info-uri=${GOOGLE_USER_INFO_URI}



logging.level.org.springframework.security=TRACE
logging.level.org.springframework.web=DEBUG

