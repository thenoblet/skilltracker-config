spring.datasource.url=jdbc:postgresql://localhost:5432/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}

spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

spring.flyway.enabled=true

spring.ai.deepseek.api-key=${OPENROUTER_API_KEY}
spring.ai.deepseek.base-url=https://openrouter.ai/api/v1
spring.ai.deepseek.chat.options.model=deepseek/deepseek-r1:free
spring.ai.deepseek.chat.options.temperature=0.3

spring.ai.retry.on-http-codes=429,500,502,503,504

# Exponential backoff
spring.ai.retry.max-attempts=5
spring.ai.retry.backoff.initial-interval=2s
spring.ai.retry.backoff.multiplier=2


# -----------------------------------------------------------------
# CLIENT CONFIGURATION FOR FEEDBACK-SERVICE
# -----------------------------------------------------------------

# Global timeout for establishing a connection
client.connect-timeout-ms=5000

# --- Task Service (Internal) ---
client.task-service.base-url=http://localhost:8085
# How long to wait for a response
client.task-service.response-timeout-ms=10000

# --- Judge0 API (Self-Hosted) ---
# Your self-hosted Judge0 URL
client.judge0-api.base-url=http://167.71.137.123:2358
# Timeout for code execution. 30 seconds is a good default.
client.judge0-api.response-timeout-ms=30000

# --- DeepSeek AI (External) ---
client.deepseek-api.base-url=https://api.deepseek.com/v1
# This MUST be loaded securely from environment variables
client.deepseek-api.api-key=${OPENROUTER_API_KEY}
# Allow a long timeout for AI model generation
client.deepseek-api.response-timeout-ms=45000

client.auth-service.token-uri=http://${USER_SERVICE_HOST}:8080/oauth/token

# Credentials for this service (feedback-service) registered with auth-service
client.auth-service.client-id=feedback-service-client
client.auth-service.client-secret=${FEEDBACK_SERVICE_CLIENT_SECRET}

# Define the scope required for internal service calls (must match auth-service config)
client.auth-service.scope=INTERNAL_SERVICE
